<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>jp.seraphyware</groupId>
	<artifactId>CDIExample</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.release>10</java.release>
		<!--  <java.release>8</java.release>  -->
		<deltaspike.version>1.8.2</deltaspike.version>
		<weld.version>3.0.5.Final</weld.version>
		<mainClass>jp.seraphyware.cdiexample.MainApp</mainClass>
	</properties>

	<dependencies>
		<!-- CDI標準アノテーションなど -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-api</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>

		<!-- DeltaSpike (BeanProviderの利用のため) -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>

		<!-- JBoss WELD (Diコンテナ本体) -->
		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-shaded</artifactId>
			<version>${weld.version}</version>
		</dependency>

		<!-- WELDの org.jboss.weld.module.ExpressionLanguageSupport を利用可能にするため -->
		<dependency>
			<groupId>org.jboss.weld.module</groupId>
			<artifactId>weld-web</artifactId>
			<version>${weld.version}</version>
		</dependency>

		<!-- EJB3.2 アノテーション参照用 -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>javax.ejb-api</artifactId>
			<version>3.2</version>
		</dependency>

		<!-- DeltaSpikeとWeldの連携 -->
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-weld</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>

		<!-- DeltaspikeのScheduler Module -->
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-scheduler-module-api</artifactId>
			<version>${deltaspike.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- DeltaspikeのScheduler Module (実装) -->
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-scheduler-module-impl</artifactId>
			<version>${deltaspike.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Scheduler module -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>

		<!-- EL式 -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>3.0.0</version>
			<scope>runtime</scope>
		</dependency>


		<!-- SLF4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.10</version>
		</dependency>

		<!-- Commons-LoggingをSLF4Jで置き換える -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.10</version>
			<scope>runtime</scope>
		</dependency>

		<!-- SLF4Jのログ実装をLog4j2にする -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.1</version>
			<exclusions>
				<exclusion>
					<!-- 参照しているslf4j-apiを外す (重複のため) -->
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- LOG4J2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.17.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.17.0</version>
		</dependency>

		<!-- テスト -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<!-- CDIテスト用 (vava9対応) -->
		<dependency>
			<groupId>org.jglue.cdi-unit</groupId>
			<artifactId>cdi-unit</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<release>${java.release}</release>
					<compilerArgument>-Xlint:all</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
			</plugin>
		</plugins>
	</build>
</project>